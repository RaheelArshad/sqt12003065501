<project name="java-algorithms-implementation" default="dist" basedir=".">
  <description>
    java-algorithms-implementation build file
  </description>

  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist" location="dist"/>

  <path id="class.path">
    <fileset dir="lib">
      <include name="**/*.jar" />
    </fileset>
  </path>

  <path id="test.class.path">
    <fileset dir="lib">
      <include name="**/*.jar" />
    </fileset>
    <fileset dir="dist">
      <include name="**/*.jar" />
    </fileset>
  </path>

  <target name="echo.env_vars">
    <property environment="env_vars"/>
    <echo>CLASSPATH='${env_vars.CLASSPATH}'</echo>
    <echo>JAVA_HOME='${env_vars.JAVA_HOME}'</echo>
    <echo>JAVA_OPTS='${env_vars.JAVA_OPTS}'</echo>
  </target>

  <target name="clean">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>

  <target name="init" depends="clean, echo.env_vars">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by build -->
    <mkdir dir="${build}"/>
    <!-- Create the dist directory structure used by build -->
    <mkdir dir="${dist}"/>
  </target>

  <target name="build" depends="init" description="build the source">
    <!-- Compile the java code from ${src} into ${build} -->
    <javac includeantruntime="false" srcdir="${src}" destdir="${build}">
      <compilerarg value="-Xlint:unchecked"/>
      <classpath refid="class.path" />
    </javac>
  </target>

  <target name="dist" depends="build" description="generate the distribution">
    <!-- Put everything in ${build} into the java-algorithms-implementation-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/java-algorithms-implementation-${DSTAMP}.jar" basedir="${build}"/>
  </target>

  <target name="run_tests" depends="dist">
    <junit printsummary="on" haltonfailure="yes">
      <jvmarg value="-server"/>
      <classpath>
        <path refid="test.class.path" />
      </classpath>
      <formatter type="brief" usefile="false" />
      <batchtest>
        <fileset dir="${src}" includes="**/test/*.java" excludes="**/test/AllTests.java" />
      </batchtest>
    </junit>
  </target>

  <target name="data_structures" depends="dist" >
    <java classname="com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming">
      <classpath>
        <path refid="test.class.path" />
      </classpath>
    </java>
  </target>

  <target name="mathematics" depends="dist" >
    <java classname="com.jwetherell.algorithms.mathematics.timing.MathematicsTiming">
      <classpath>
        <path refid="test.class.path" />
      </classpath>
    </java>
  </target>

  <target name="numbers" depends="dist" >
    <java classname="com.jwetherell.algorithms.numbers.timing.NumbersTiming">
      <classpath>
        <path refid="test.class.path" />
      </classpath>
    </java>
  </target>

  <target name="search" depends="dist" >
    <java classname="com.jwetherell.algorithms.search.timing.SearchTiming">
      <classpath>
        <path refid="test.class.path" />
      </classpath>
    </java>
  </target>

  <target name="sequences" depends="dist" >
    <java classname="com.jwetherell.algorithms.sequence.timing.SequencesTiming">
      <classpath>
        <path refid="test.class.path" />
      </classpath>
    </java>
  </target>

  <target name="sorts" depends="dist" >
    <java classname="com.jwetherell.algorithms.sorts.timing.SortsTiming">
      <classpath>
        <path refid="test.class.path" />
      </classpath>
    </java>
  </target>

  <target name="strings" depends="dist" >
    <java classname="com.jwetherell.algorithms.strings.timing.StringsTiming">
      <classpath>
        <path refid="test.class.path" />
      </classpath>
    </java>
  </target>

  <target name="run_timing" depends="mathematics, numbers, search, sequences, strings, sorts, data_structures" />

  <target name="test" depends="run_tests, run_timing" />

</project>
